package com.unsw.web.mealReco.entity;
// Generated 2019-10-18 17:39:37 by Hibernate Tools 5.2.12.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Review generated by hbm2java
 */
@Entity
@Table(name = "review", catalog = "mymeal")
@NamedQueries({//change
	@NamedQuery(name = "Review.findAll", query="SELECT r FROM Review r ORDER BY r.reviewTime DESC"),
	@NamedQuery(name = "Review.countAll", query="SELECT COUNT(r) FROM Review r"),
	@NamedQuery(name = "Review.findByUserAndRecipe", 
	query="SELECT r FROM Review r WHERE r.users.userId = :userId"+" AND r.recipe.recipeId = :recipeId"),
	@NamedQuery(name="Review.findByUser", query="SELECT r From Review r where r.users.userId = :userId"),
	@NamedQuery(name="Review.findByRecipe", query="SELECT r From Review r where r.recipe.recipeId = :recipeId"),
	@NamedQuery(name="Review.mostFavoredRecipe", query="SELECT r.recipe.recipeId, COUNT(r.recipe.recipeId) AS ReviewCount, AVG(r.rating) as AvgRating FROM Review r"
		+" Group By r.recipe.recipeId Having AVG(r.rating) >= 4.0"+"ORDER BY ReviewCount DESC, AvgRating DESC")
})
public class Review implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer reviewId;
	private String comment;
	private String headline;
	private int rating;
	private Date reviewTime;
	private Recipe recipe;
	private Users user;

	public Review() {
	}
	
	public Review(String comment, String headline, int rating, Date reviewTime) {
		this.comment = comment;
		this.headline = headline;
		this.rating = rating;
		this.reviewTime = reviewTime;
	}
	public Review(String comment, String headline, int rating, Date reviewTime, Recipe recipe, Users user) {
		this.comment = comment;
		this.headline = headline;
		this.rating = rating;
		this.reviewTime = reviewTime;
		this.recipe = recipe;
		this.user = user;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "review_id", unique = true, nullable = false)
	public Integer getReviewId() {
		return this.reviewId;
	}

	public void setReviewId(Integer reviewId) {
		this.reviewId = reviewId;
	}

	@Column(name = "comment", nullable = false, length = 500)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Column(name = "headline", nullable = false, length = 128)
	public String getHeadline() {
		return this.headline;
	}

	public void setHeadline(String headline) {
		this.headline = headline;
	}

	@Column(name = "rating", nullable = false)
	public int getRating() {
		return this.rating;
	}

	public void setRating(int rating) {
		this.rating = rating;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "review_time", nullable = false, length = 19)
	public Date getReviewTime() {
		return this.reviewTime;
	}

	public void setReviewTime(Date reviewTime) {
		this.reviewTime = reviewTime;
	}

	@ManyToOne(fetch=FetchType.EAGER)
	@JoinColumn(name="recipe_id")
	public Recipe getRecipe(){
		return this.recipe;
	}
	public void setRecipe(Recipe recipe) {
		this.recipe = recipe;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "user_id")
	public Users getUsers() {
		return this.user;
	}

	public void setUsers(Users customer) {
		this.user = customer;
	}

}
