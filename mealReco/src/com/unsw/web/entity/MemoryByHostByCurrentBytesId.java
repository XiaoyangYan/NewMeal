package com.unsw.web.entity;
// Generated 2019-10-14 18:17:54 by Hibernate Tools 5.3.10.Final

import java.math.BigInteger;

/**
 * MemoryByHostByCurrentBytesId generated by hbm2java
 */
public class MemoryByHostByCurrentBytesId implements java.io.Serializable {

	private String host;
	private BigInteger currentCountUsed;
	private String currentAllocated;
	private String currentAvgAlloc;
	private String currentMaxAlloc;
	private String totalAllocated;

	public MemoryByHostByCurrentBytesId() {
	}

	public MemoryByHostByCurrentBytesId(String host, BigInteger currentCountUsed, String currentAllocated,
			String currentAvgAlloc, String currentMaxAlloc, String totalAllocated) {
		this.host = host;
		this.currentCountUsed = currentCountUsed;
		this.currentAllocated = currentAllocated;
		this.currentAvgAlloc = currentAvgAlloc;
		this.currentMaxAlloc = currentMaxAlloc;
		this.totalAllocated = totalAllocated;
	}

	public String getHost() {
		return this.host;
	}

	public void setHost(String host) {
		this.host = host;
	}

	public BigInteger getCurrentCountUsed() {
		return this.currentCountUsed;
	}

	public void setCurrentCountUsed(BigInteger currentCountUsed) {
		this.currentCountUsed = currentCountUsed;
	}

	public String getCurrentAllocated() {
		return this.currentAllocated;
	}

	public void setCurrentAllocated(String currentAllocated) {
		this.currentAllocated = currentAllocated;
	}

	public String getCurrentAvgAlloc() {
		return this.currentAvgAlloc;
	}

	public void setCurrentAvgAlloc(String currentAvgAlloc) {
		this.currentAvgAlloc = currentAvgAlloc;
	}

	public String getCurrentMaxAlloc() {
		return this.currentMaxAlloc;
	}

	public void setCurrentMaxAlloc(String currentMaxAlloc) {
		this.currentMaxAlloc = currentMaxAlloc;
	}

	public String getTotalAllocated() {
		return this.totalAllocated;
	}

	public void setTotalAllocated(String totalAllocated) {
		this.totalAllocated = totalAllocated;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof MemoryByHostByCurrentBytesId))
			return false;
		MemoryByHostByCurrentBytesId castOther = (MemoryByHostByCurrentBytesId) other;

		return ((this.getHost() == castOther.getHost()) || (this.getHost() != null && castOther.getHost() != null
				&& this.getHost().equals(castOther.getHost())))
				&& ((this.getCurrentCountUsed() == castOther.getCurrentCountUsed())
						|| (this.getCurrentCountUsed() != null && castOther.getCurrentCountUsed() != null
								&& this.getCurrentCountUsed().equals(castOther.getCurrentCountUsed())))
				&& ((this.getCurrentAllocated() == castOther.getCurrentAllocated())
						|| (this.getCurrentAllocated() != null && castOther.getCurrentAllocated() != null
								&& this.getCurrentAllocated().equals(castOther.getCurrentAllocated())))
				&& ((this.getCurrentAvgAlloc() == castOther.getCurrentAvgAlloc())
						|| (this.getCurrentAvgAlloc() != null && castOther.getCurrentAvgAlloc() != null
								&& this.getCurrentAvgAlloc().equals(castOther.getCurrentAvgAlloc())))
				&& ((this.getCurrentMaxAlloc() == castOther.getCurrentMaxAlloc())
						|| (this.getCurrentMaxAlloc() != null && castOther.getCurrentMaxAlloc() != null
								&& this.getCurrentMaxAlloc().equals(castOther.getCurrentMaxAlloc())))
				&& ((this.getTotalAllocated() == castOther.getTotalAllocated())
						|| (this.getTotalAllocated() != null && castOther.getTotalAllocated() != null
								&& this.getTotalAllocated().equals(castOther.getTotalAllocated())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getHost() == null ? 0 : this.getHost().hashCode());
		result = 37 * result + (getCurrentCountUsed() == null ? 0 : this.getCurrentCountUsed().hashCode());
		result = 37 * result + (getCurrentAllocated() == null ? 0 : this.getCurrentAllocated().hashCode());
		result = 37 * result + (getCurrentAvgAlloc() == null ? 0 : this.getCurrentAvgAlloc().hashCode());
		result = 37 * result + (getCurrentMaxAlloc() == null ? 0 : this.getCurrentMaxAlloc().hashCode());
		result = 37 * result + (getTotalAllocated() == null ? 0 : this.getTotalAllocated().hashCode());
		return result;
	}

}
